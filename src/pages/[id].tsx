import { urqlClient } from '@/libs/urql';
import {
  Box,
  Card,
  CardBody,
  CardHeader,
  Heading,
  Stack,
  StackDivider,
  Text,
} from '@chakra-ui/react';
import { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { gql } from 'urql';

type Props = {
  todo: {
    id: string;
    title: string;
    detail: string;
    createdAt: string;
    updatedAt: string;
  };
};

const TodoDetail: NextPage<Props> = (props) => {
  const { todo } = props;
  return (
    <>
      <Head>
        <title>GraphQL Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Card>
          <CardHeader>
            <Heading size="md">{todo.title}</Heading>
          </CardHeader>
          <CardBody>
            <Stack divider={<StackDivider />} spacing="4">
              <Box>
                <Heading size="xs" textTransform="uppercase">
                  Detail
                </Heading>
                <Text pt="2" fontSize="sm">
                  {todo.detail}
                </Text>
              </Box>
              <Box>
                <Heading size="xs" textTransform="uppercase">
                  Created_At
                </Heading>
                <Text pt="2" fontSize="sm">
                  {todo.createdAt}
                </Text>
              </Box>
              <Box>
                <Heading size="xs" textTransform="uppercase">
                  Updated_At
                </Heading>
                <Text pt="2" fontSize="sm">
                  {todo.updatedAt}
                </Text>
              </Box>
            </Stack>
          </CardBody>
        </Card>
      </main>
    </>
  );
};

export default TodoDetail;

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  try {
    // const { id } = context.query;
    // const client = await urqlClient();

    // const id = '758e8f4e-f145-4406-96a3-3f402cceb7f8';

    // if (typeof id !== 'string') {
    //   throw new Error('idの取得に失敗しました。');
    // } else {
    //   console.log(typeof id);
    //   console.log(id);

    //   const todoQuery = gql`
    //     query GetTodoById {
    //       getTodoById(id: ${id}) {
    //         title
    //         detail
    //         createdAt
    //         updatedAt
    //       }
    //     }
    //   `;

    //   const result = await client.query(todoQuery, {}).toPromise();
    //   return { props: { todo: {
    //     "title": "test100",
    //     "detail": "test100",
    //     "createdAt": "2023-03-04T04:03:44.186Z",
    //     "updatedAt": "2023-03-04T07:16:24.933Z"
    //   } } };
    // }
    return {
      props: {
        todo: {
          id: '758e8f4e-f145-4406-96a3-3f402cceb7f8',
          title: 'test100',
          detail: 'test100',
          createdAt: '2023-03-04T04:03:44.186Z',
          updatedAt: '2023-03-04T07:16:24.933Z',
        },
      },
    };
  } catch (error) {
    console.error(error);
    return {
      notFound: true,
    };
  }
};
